// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GestionGimnasio.Models;

public partial class GestionGimnasioContext : DbContext
{
    public GestionGimnasioContext(DbContextOptions<GestionGimnasioContext> options)
        : base(options)
    {
    }

    public virtual DbSet<PantallasPoRol> PantallasRoles { get; set; }
    public virtual DbSet<tbCargos> tbCargos { get; set; }

    public virtual DbSet<tbClases> tbClases { get; set; }

    public virtual DbSet<tbClientes> tbClientes { get; set; }

    public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }

    public virtual DbSet<tbEjercicios> tbEjercicios { get; set; }

    public virtual DbSet<tbEjerciciosPorRutinas> tbEjerciciosPorRutinas { get; set; }

    public virtual DbSet<tbEjerciciosRutinasPorCliente> tbEjerciciosRutinasPorCliente { get; set; }

    public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }

    public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }

    public virtual DbSet<tbGimnasios> tbGimnasios { get; set; }

    public virtual DbSet<tbMetodosDePago> tbMetodosDePago { get; set; }

    public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }

    public virtual DbSet<tbPagos> tbPagos { get; set; }

    public virtual DbSet<tbPantallas> tbPantallas { get; set; }

    public virtual DbSet<tbPlanes> tbPlanes { get; set; }

    public virtual DbSet<tbRoles> tbRoles { get; set; }

    public virtual DbSet<tbRolesPorPantalla> tbRolesPorPantalla { get; set; }

    public virtual DbSet<tbRutinas> tbRutinas { get; set; }

    public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

    public virtual DbSet<LoginOutput> LoginOutput { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<tbCargos>(entity =>
        {
            entity.HasKey(e => e.Cargo_Id).HasName("PK_Gnral_tbCargos_Cargo_Id");

            entity.ToTable("tbCargos", "Gnral");

            entity.Property(e => e.Cargo_Estado).HasDefaultValue(true);
            entity.Property(e => e.Cargo_Nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbCargosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbCargos_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbCargosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gnral_tbCargos_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbClases>(entity =>
        {
            entity.HasKey(e => e.Clase_Id).HasName("PK_Gimna_tbClases_Clase_Id");

            entity.ToTable("tbClases", "Gimna");

            entity.Property(e => e.Clase_Descripcion)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Clase_Estado).HasDefaultValue(true);
            entity.Property(e => e.Clase_Fecha)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Clase_Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Emple).WithMany(p => p.tbClases)
                .HasForeignKey(d => d.Emple_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbClases_Gimna_tbEmpleados_Emple_Id");

            entity.HasOne(d => d.Gimna).WithMany(p => p.tbClases)
                .HasForeignKey(d => d.Gimna_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbClases_Gimna_tbGimnasios_Gimna_Id");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbClasesUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbClases_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbClasesUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbClases_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbClientes>(entity =>
        {
            entity.HasKey(e => e.Clien_id).HasName("PK_Gnral_tbClientes_Clien_Id");

            entity.ToTable("tbClientes", "Gnral");

            entity.HasIndex(e => e.Clien_Identidad, "UQ__tbClient__17E9261D835BB09E").IsUnique();

            entity.Property(e => e.Clien_Direccion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Clien_Estado).HasDefaultValue(true);
            entity.Property(e => e.Clien_FechaNacimiento).HasColumnType("datetime");
            entity.Property(e => e.Clien_Identidad)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Clien_PrimerApellido)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Clien_PrimerNombre)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Clien_SegundoApellido)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Clien_SegundoNombre)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Clien_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Munic_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);

            entity.HasOne(d => d.EsCiv).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.EsCiv_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbClientes_Gnral_tbEstadosCiviles_EsCi_Id");

            entity.HasOne(d => d.Munic_CodigoNavigation).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.Munic_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbClientes_Gnral_tbMunicipios_Munic_Codigo");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbClientesUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbClienes_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbClientesUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gnral_tbClientes_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbDepartamentos>(entity =>
        {
            entity.HasKey(e => e.Depar_Codigo).HasName("PK_Gnral_tbDepartamentos_Depar_Codigo");

            entity.ToTable("tbDepartamentos", "Gnral");

            entity.Property(e => e.Depar_Codigo)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Depar_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Depar_Estado).HasDefaultValue(true);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbDepartamentosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbDepartamentos_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbDepartamentosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gnral_tbDepartamentos_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbEjercicios>(entity =>
        {
            entity.HasKey(e => e.Ejerc_Id).HasName("PK_Gimna_tbEjercicios_Ejerc_Id");

            entity.ToTable("tbEjercicios", "Gimna");

            entity.Property(e => e.Ejerc_Descripcion)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Ejerc_Estado).HasDefaultValue(true);
            entity.Property(e => e.Ejerc_MusculoPrincipal)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ejerc_Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbEjerciciosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbEjercicios_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbEjerciciosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbEjercicios_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbEjerciciosPorRutinas>(entity =>
        {
            entity.HasKey(e => e.EjRut_Id).HasName("PK_Gimna_tbEjerciciosPorRutinas_EjRut_Id");

            entity.ToTable("tbEjerciciosPorRutinas", "Gimna");

            entity.Property(e => e.EjRut_Estado).HasDefaultValue(true);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Ejerc).WithMany(p => p.tbEjerciciosPorRutinas)
                .HasForeignKey(d => d.Ejerc_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Giman_tbEjerciciosPorRutinas_Gimna_tbEjercicios_Ejerc_Id");

            entity.HasOne(d => d.Rutin).WithMany(p => p.tbEjerciciosPorRutinas)
                .HasForeignKey(d => d.Rutin_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbEjerciciosPorRutinas_Gimna_tbRutinas_Rutin_Id");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbEjerciciosPorRutinasUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbEjerciciosPorRutinas_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbEjerciciosPorRutinasUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbEjerciciosPorRutinas_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbEjerciciosRutinasPorCliente>(entity =>
        {
            entity.HasKey(e => e.EjRCl_Id).HasName("PK_Gimna_tbRutinasPorCliente_RuCli_Id");

            entity.ToTable("tbEjerciciosRutinasPorCliente", "Gimna");

            entity.Property(e => e.EjRCl_Estado).HasDefaultValue(true);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Clien).WithMany(p => p.tbEjerciciosRutinasPorCliente)
                .HasForeignKey(d => d.Clien_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbRutinasPorCliente_Gnral_tbClientes_Clie_Id");

            entity.HasOne(d => d.EjRut).WithMany(p => p.tbEjerciciosRutinasPorCliente)
                .HasForeignKey(d => d.EjRut_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbRutinasPorCliente_Gimna_tbEjerciciosPorRutina_EjRut_Id");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbEjerciciosRutinasPorClienteUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbRutinasPorCliente_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbEjerciciosRutinasPorClienteUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbRutinasPorCliente_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbEmpleados>(entity =>
        {
            entity.HasKey(e => e.Emple_Id).HasName("PK_Gimna_tbEmpleados_Emple_Id");

            entity.ToTable("tbEmpleados", "Gimna");

            entity.HasIndex(e => e.Emple_Identidad, "UQ__tbEmplea__DC82A2FB74C6F397").IsUnique();

            entity.Property(e => e.Emple_Direccion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Emple_Estado).HasDefaultValue(true);
            entity.Property(e => e.Emple_FechaNacimiento).HasColumnType("datetime");
            entity.Property(e => e.Emple_Identidad)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Emple_PrimerApellido)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Emple_PrimerNombre)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Emple_SegundoApellido)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Emple_SegundoNombre)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Emple_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Munic_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);

            entity.HasOne(d => d.Cargo).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Cargo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_Empleados_Gnral_tbCargos_Cargo_Id");

            entity.HasOne(d => d.EsCiv).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.EsCiv_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbEmpleados_Gnral_tbEstadosCiviles_EsCi_Id");

            entity.HasOne(d => d.Munic_CodigoNavigation).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Munic_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbEmpleadas_Gnral_tbMunicipios_Munic_Codigo");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbEmpleadosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbEmpleados_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbEmpleadosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbEmpleados_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbEstadosCiviles>(entity =>
        {
            entity.HasKey(e => e.EsCiv_Id).HasName("PK_Gnral_tbEstadosCiviles_EsCiv_Id");

            entity.ToTable("tbEstadosCiviles", "Gnral");

            entity.Property(e => e.EsCiv_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EsCiv_Estado).HasDefaultValue(true);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbEstadosCivilesUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbEstadosCiviles_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbEstadosCivilesUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gnral_tbEstadosCiviles_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbGimnasios>(entity =>
        {
            entity.HasKey(e => e.Gimna_Id).HasName("PK_Gimna_tbGimnasios_Gimna_Id");

            entity.ToTable("tbGimnasios", "Gimna");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Gimna_Direccion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Gimna_Estado).HasDefaultValue(true);
            entity.Property(e => e.Gimna_Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Munic_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);

            entity.HasOne(d => d.Munic_CodigoNavigation).WithMany(p => p.tbGimnasios)
                .HasForeignKey(d => d.Munic_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbGimnasios_Gnral_tbMunicipios_Muni_Codigo");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbGimnasiosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbGimnasios_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbGimnasiosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbGimnasios_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbMetodosDePago>(entity =>
        {
            entity.HasKey(e => e.MetPa_Id).HasName("PK_Pagos_tbMetodosDePago_MetPa_Id");

            entity.ToTable("tbMetodosDePago", "Pagos");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.MetPa_Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MetPa_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbMetodosDePagoUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pagos_tbMetodosDePago_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbMetodosDePagoUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Pagos_tbMetodosDePago_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbMunicipios>(entity =>
        {
            entity.HasKey(e => e.Munic_Codigo).HasName("PK_Gnral_tbMunicipios_Munic_Codigo");

            entity.ToTable("tbMunicipios", "Gnral");

            entity.Property(e => e.Munic_Codigo)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Depar_Codigo)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Munic_Estado).HasDefaultValue(true);
            entity.Property(e => e.Munic_Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Depar_CodigoNavigation).WithMany(p => p.tbMunicipios)
                .HasForeignKey(d => d.Depar_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("PK_Gnral_tbMunicipios_Gnral_tbDepartamentos_Depar_Codigo");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbMunicipiosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gnral_tbMunicipios_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbMunicipiosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gnral_tbMunicipios_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbPagos>(entity =>
        {
            entity.HasKey(e => e.Pagos_Id).HasName("PK_Pagos_tbPagos_Pago_Id");

            entity.ToTable("tbPagos", "Pagos");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Pagos_Estado).HasDefaultValue(true);
            entity.Property(e => e.Pagos_Fecha).HasColumnType("datetime");

            entity.HasOne(d => d.Clien).WithMany(p => p.tbPagos)
                .HasForeignKey(d => d.Clien_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pagos_tbPagos_Gnral_tbClientes_Clien_id");

            entity.HasOne(d => d.MetPa).WithMany(p => p.tbPagos)
                .HasForeignKey(d => d.MetPa_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pagos_tbPagos_Pagos_tbMetodosDePago_MetPa_id");

            entity.HasOne(d => d.Plane).WithMany(p => p.tbPagos)
                .HasForeignKey(d => d.Plane_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pagos_tbPagos_Pagos_tbPlanes_Plane_id");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbPagosUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pagos_tbPagos_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbPagosUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Pagos_tbPagos_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbPantallas>(entity =>
        {
            entity.HasKey(e => e.Panta_Id).HasName("PK_Acces_tbPantallas_Panta_Id");

            entity.ToTable("tbPantallas", "Acces");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Panta_Estado).HasDefaultValue(true);
            entity.Property(e => e.Panta_Nombre)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbPantallasUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbPantallas_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbPantallasUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Acces_tbPantallas_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbPlanes>(entity =>
        {
            entity.HasKey(e => e.Plane_Id).HasName("PK_Pagos_tbPlanes_Pagos_Id");

            entity.ToTable("tbPlanes", "Pagos");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Plane_Descripcion)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Plane_Estado).HasDefaultValue(true);
            entity.Property(e => e.Plane_Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbPlanesUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pagos_tbPlanes_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbPlanesUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Pagos_tbPlanes_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbRoles>(entity =>
        {
            entity.HasKey(e => e.Roles_Id).HasName("PK_Acces_tbRoles_Roles_Id");

            entity.ToTable("tbRoles", "Acces");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Roles_Descripcion)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Roles_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbRolesUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbRoles_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbRolesUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Acces_tbRoles_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbRolesPorPantalla>(entity =>
        {
            entity.HasKey(e => e.RolPa_Id).HasName("PK_Acces_tbRolesPorPantalla_RolPa_Id");

            entity.ToTable("tbRolesPorPantalla", "Acces");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.RolPa_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Panta).WithMany(p => p.tbRolesPorPantalla)
                .HasForeignKey(d => d.Panta_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Accs_tbRolesPorPantalla_Acces_tbPantallas_Panta_Id");

            entity.HasOne(d => d.Roles).WithMany(p => p.tbRolesPorPantalla)
                .HasForeignKey(d => d.Roles_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbRolesPorPantalla_Acces_tbRoles_Roles_Id");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbRolesPorPantallaUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbRolesPorPantalla_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbRolesPorPantallaUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Acces_tbRolesPorPantalla_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbRutinas>(entity =>
        {
            entity.HasKey(e => e.Rutin_Id).HasName("PK_Gimna_tbRutinas_Rutin_Id");

            entity.ToTable("tbRutinas", "Gimna");

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Rutin_Estado).HasDefaultValue(true);
            entity.Property(e => e.Rutin_Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.tbRutinasUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gimna_tbRutinas_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.tbRutinasUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Gimna_tbRutinas_Acces_tbUsuarios_Usuar_Modificacion");
        });

        modelBuilder.Entity<tbUsuarios>(entity =>
        {
            entity.HasKey(e => e.Usuar_id).HasName("PK_Acce_tbUsuarios");

            entity.ToTable("tbUsuarios", "Acces");

            entity.HasIndex(e => e.Usuar_Nombre, "UQ__tbUsuari__0056D1AA19DAD4AD").IsUnique();

            entity.Property(e => e.Fecha_Creacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Usuar_Contrasena)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Usuar_Estado).HasDefaultValue(true);
            entity.Property(e => e.Usuar_Nombre)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.HasOne(d => d.Emple).WithMany(p => p.tbUsuarios)
                .HasForeignKey(d => d.Emple_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbUsuarios_Gimna_tbEmpleados_Emple_Id");

            entity.HasOne(d => d.Roles).WithMany(p => p.tbUsuarios)
                .HasForeignKey(d => d.Roles_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbUsuarios_Acces_tbRoles_Roles_Id");

            entity.HasOne(d => d.Usuar_CreacionNavigation).WithMany(p => p.InverseUsuar_CreacionNavigation)
                .HasForeignKey(d => d.Usuar_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acces_tbUsuarios_Acces_tbUsuarios_Usuar_Creacion");

            entity.HasOne(d => d.Usuar_ModificacionNavigation).WithMany(p => p.InverseUsuar_ModificacionNavigation)
                .HasForeignKey(d => d.Usuar_Modificacion)
                .HasConstraintName("FK_Acces_tbUsuarios_Acces_tbUsuarios_Usuar_Modificacion");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}